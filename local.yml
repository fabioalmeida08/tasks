- hosts: localhost
  vars:
    user: "{{ ansible_env.USER }}"
    sudo_user: "{{ ansible_env.SUDO_USER }}"
    distro: "{{ ansible_distribution }}"
  tasks:
    - name: Print variable
      debug:
        var: sudo_user
    - name: print distro
      debug:
        var: distro
    - name: print user
      debug:
        var: user
    - name: gnome | keybindings | set custom-keybindings
      become_user: "{{ user }}"
      tags: gnome,keybindings
      community.general.dconf:
        key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings"
        value: "['/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom4/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom5/', '/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom6/']"

    - name: gnome | keybindings | set terminal keybinding
      become_user: "{{ user }}"
      tags: gnome,keybindings
      community.general.dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      with_items:
        - {
            key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/name",
            value: "'Terminal'",
          }
        - {
            key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/binding",
            value: "'<Alt>Return'",
          }
        - {
            key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom0/command",
            value: "'kitty'",
          }

    - name: gnome | keybindings | set screenshot keybinding
      become_user: "{{ user }}"
      tags: gnome,keybindings
      community.general.dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      with_items:
        - {
            key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/name",
            value: "'Print'",
          }
        - {
            key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/binding",
            value: "'Print'",
          }
        - {
            key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom1/command",
            value: "'flameshot gui'",
          }

    - name: gnome | keybindings | pavu control keybinding
      become_user: "{{ user }}"
      tags: gnome,keybindings
      community.general.dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      with_items:
        - {
            key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/name",
            value: "'Pavu-control'",
          }
        - {
            key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/binding",
            value: "'<Super>v'",
          }
        - {
            key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom2/command",
            value: "'pavucontrol'",
          }

    - name: gnome | keybindings | nautilus home keybinding
      become_user: "{{ user }}"
      vars:
        user: "{{ ansible_env.SUDO_USER }}"
      tags: gnome,keybindings
      community.general.dconf:
        key: "{{ item.key }}"
        value: "{{ item.value }}"
      with_items:
        - {
            key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/name",
            value: "'Nautilus'",
          }
        - {
            key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/binding",
            value: "'<Super>f'",
          }
        - {
            key: "/org/gnome/settings-daemon/plugins/media-keys/custom-keybindings/custom3/command",
            value: "'nautilus -w {{ home }}'",
          }

# - hosts: localhost
#   vars:
#     distro: "{{ ansible_distribution }}"
#     user: "{{ ansible_env.USER }}"
#     ipaddr: "{{ ansible_default_ipv4.address }}"
#   connection: local
#   become: true

#   pre_tasks:
#     - name: pre-run | check requirements
#       become_user: "{{ user }}" 
#       tags: always
#       package:
#         name: "{{ item }}"
#         state: latest
#       loop:
#         - python-psutil
#         - python-pip
#         - python-setuptools

#     - name: Install github module
#       ansible.builtin.pip:
#         name: github3.py

#     - name: Enable Multilib
#       replace:
#         path: "/etc/pacman.conf"
#         regexp: '#\[multilib]\n#Include = \/etc\/pacman.d\/mirrorlist'
#         replace: |
#           [multilib]
#           Include = /etc/pacman.d/mirrorlist
#       when: distro == 'Archlinux'

# - hosts: localhost
#   connection: local
#   become: true
#   vars:
#     distro: "{{ ansible_distribution }}"

#   tasks:
#     - name: software | unzip | install package
#       tags: unzip, packages, workstation-packages
#       package:
#         name: unzip
#         state: latest
